# To mount the required secrets for entraID integration and ingress configuration we use SecretClassProvider to bootstrap the secrets, for this some extra config in argocd-server deployment is patched onto the deployment as seen below.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-server
spec:
  template:
    metadata:
      annotations:
        reloader.stakater.com/auto: "true"
      labels:
        azure.workload.identity/use: "true"
    spec:
      containers:
      - name: argocd-server
        args:
          - /usr/local/bin/argocd-server
          -  --content-security-policy=""
#        env:
#          - name: SSL_CERT_DIR
#            value: /app/config/tls
#        volumeMounts:
#          - mountPath: "/mnt/secrets-store"
#            name: secrets-store
#            readOnly: true
#          - mountPath: "/mnt/tls-secrets-store"
#            name: tls-secrets-store
#            readOnly: true
#      volumes:
#      - name: secrets-store
#        csi:
#          driver: secrets-store.csi.k8s.io
#          readOnly: true
#          volumeAttributes:
#            secretProviderClass: argocd-oidc-secret-class
#      - name: tls-secrets-store
#        csi:
#          driver: secrets-store.csi.k8s.io
#          readOnly: true
#          volumeAttributes:
#            secretProviderClass: argocd-tls-secret-class
---
# modify application-controller StatefulSet to use workload identity
apiVersion:  apps/v1
kind: StatefulSet
metadata:
  name: argocd-application-controller
spec:
  template:
    metadata:
      annotations:
        reloader.stakater.com/auto: "true"
      labels:
        azure.workload.identity/use: "true"
---
# ServiceAccount for argocd-server and argocd-application-controller to use Azure Workload Identity
# Replace <ARGOCD_UMI_CLIENT_ID> with the client ID of your Azure Workload Identity application configured via terraform.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    azure.workload.identity/client-id: <ARGOCD_UMI_CLIENT_ID>
    azure.workload.identity/tenant-id: <YOUR_TENANT_ID>
  name: argocd-server
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    azure.workload.identity/client-id: <ARGOCD_UMI_CLIENT_ID>
    azure.workload.identity/tenant-id: <YOUR_TENANT_ID>
  name: argocd-application-controller
---
# If you use a custom TLS Secret that is not publicly recognized by ArgoCD for your repository, you need to ensure that the argocd-repo-server deployment is aware of the custom TLS Secrets.
# to force argocd to recognize our config of custom TLS Secrets we need to set this ENV var in the argocd-server and argocd-repo-server deployments
# this workaround was presented in https://github.com/argoproj/argo-cd/issues/3539
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: argocd-repo-server
#spec:
#  template:
#    spec:
#      containers:
#      - name: argocd-repo-server
#        env:
#          - name: SSL_CERT_DIR
#            value: /app/config/tls
